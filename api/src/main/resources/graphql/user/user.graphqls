type User {
    oid: ID!
    userId: String!
    name: String!
    email: String!
}

enum Role {
    ROLE_USER
    ROLE_MANAGER
    ROLE_SYS_ADMIN
}

enum Status {
    ACTIVE
    WITHDRAW
    INACTIVE
}

input SignUpIn {
    userId: String!
    name: String!
    email: String!
    password: String!
}

input UserUpdateIn {
    name: String!
    email: String!
}

type Query {
    findAllUsers: [User!],
    getByUserId(userId: String!): User!
}

type Mutation {
    createUser(signUpIn: SignUpIn): User,
    deleteUserByUserOid(userOid: ID!): Boolean,
    updateUserByUserOid(userOid: ID!, userUpdateIn: UserUpdateIn!): User
}
